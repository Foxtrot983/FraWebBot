import logging
from aiogram import Bot, Dispatcher, executor, types
from config import API_TOKEN

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)


@dp.message_handler(commands=['start', 'help'])
async def send_welcome(message: types.Message):

    await message.answer("–ü—Ä–∏–≤–µ—Ç!\n–Ø –±–æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ FraWeb, —á–µ—Ä–µ–∑ –º–µ–Ω—è —Ç—ã –º–æ–∂–µ—à—å –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –≤–µ–±-—Å–∞–π—Ç–∞. üòä")
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = ["–û –Ω–∞—Å", "–ö–æ–Ω—Ç–∞–∫—Ç—ã", "–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É"]
    keyboard.add(*buttons)
    await message.answer("–î–∞–ª–µ–µ –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –æ –Ω–∞—Å, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", reply_markup=keyboard)


@dp.message_handler(lambda message: message.text == '–û –Ω–∞—Å')
async def about(message: types.Message):
    await message.reply('–¢—É—Ç –±—É–¥–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞—Å!!')

@dp.message_handler(lambda message: message.text == '–ö–æ–Ω—Ç–∞–∫—Ç—ã')
async def about(message: types.Message):
    await message.reply('–¢—É—Ç –±—É–¥—É—Ç –∫–æ–Ω—Ç–∞–∫—Ç—ã!!')

@dp.message_handler(lambda message: message.text == '–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É')
async def about(message: types.Message):
    await message.reply('–¢—É—Ç –±—É–¥–µ—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–±–æ—Ä–æ–≤ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –µ–≥–æ –∑–∞—è–≤–∫–∏')

@dp.message_handler()
async def echo(message: types.Message):

    await message.reply("–ú–æ—è –≤–µ—Ä—Å–∏—è 0.1, —Ñ—É–Ω—Ü–∏–æ–Ω–∞–ª –µ—â–µ –Ω–µ –¥–æ–ø–∏–ª–µ–Ω üò†üò†üò†")


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
